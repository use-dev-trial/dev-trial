name: CI checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: read
  contents: read

jobs:
  file-changes:
    name: Check location of file changes
    runs-on: ubuntu-latest
    outputs:
      server: ${{ steps.filter.outputs.server }} 
      forge: ${{ steps.filter.outputs.forge }}
      arena: ${{ steps.filter.outputs.arena }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            server:
              - 'server/**'
            forge:
              - 'forge/**'
            arena:
              - 'arena/**'

  server-CI:
    needs: file-changes
    if: ${{ needs.file-changes.outputs.server == 'true' }}
    name: server-CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12.1
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.1'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        working-directory: ./server
        run: |
          poetry install --no-interaction --no-root

      - name: Run isort
        working-directory: ./server
        run: |
          poetry run isort --check-only --diff .

      - name: Run autoflake
        working-directory: ./server
        run: |
          poetry run autoflake --remove-all-unused-imports --in-place --recursive --check --exclude=__init__.py --ignore-pass-after-docstring .

      - name: Run black
        working-directory: ./server
        run: |
          poetry run black --check --diff .

  forge-CI:
    needs: file-changes
    if: ${{ needs.file-changes.outputs.forge == 'true' }}
    name: forge-CI
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_FORGE_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_FORGE_CLERK_PUBLISHABLE_KEY }}
      FORGE_CLERK_SECRET_KEY: ${{ secrets.FORGE_CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: "/sign-in"
      NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL: "/"
      NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL: "/"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./forge
        run: npm ci

      - name: Run Prettier
        working-directory: ./forge
        run: npx prettier --check .

      - name: Run ESLint
        working-directory: ./forge
        run: npm run lint .
      
      - name: Build
        working-directory: ./forge
        run: npm run build
  
  arena-CI:
    needs: file-changes
    if: ${{ needs.file-changes.outputs.arena == 'true' }}
    name: arena-CI
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_ARENA_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_ARENA_CLERK_PUBLISHABLE_KEY }}
      ARENA_CLERK_SECRET_KEY: ${{ secrets.ARENA_CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: "/sign-in"
      NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL: "/"
      NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL: "/"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./arena
        run: npm ci

      - name: Run Prettier
        working-directory: ./arena
        run: npx prettier --check .

      - name: Run ESLint
        working-directory: ./arena
        run: npm run lint .

      - name: Build
        working-directory: ./arena
        run: npm run build
